#user  nobody;
worker_processes  3;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

#四层转发，tcp/udp协议转发
stream {
    log_format proxy '$remote_addr [$time_local] '
                 '$protocol $status $bytes_sent $bytes_received '
                 '$session_time "$upstream_addr" '
                 '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    access_log  /var/log/nginx/access_stream.log  proxy;
    open_log_file_cache off;

    upstream dns_proxy {
        server 10.227.89.58:8053;
    }
    upstream hello_proxy {
        server 10.227.89.58:880;
    }
    upstream hello_proxy_ssl {
        server 10.227.89.58:8443;
    }
    server {
        listen 53 udp reuseport;
        proxy_pass dns_proxy;
	proxy_responses 1;
    }
    server {
        listen 80;
        proxy_connect_timeout 1s;
        proxy_timeout 300s;
        proxy_pass hello_proxy;
    }
    server {
        listen 443;
        proxy_connect_timeout 1s;
        proxy_timeout 300s;
        proxy_pass hello_proxy_ssl;
    }
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    upstream backend {
       server 10.227.89.58:8080;
    }
    server {
        listen  880;
	listen	8443 ssl;
        server_name  www.example.com;
	# 引用中间CA证书
	ssl_certificate      /etc/nginx/ssl/TestIntermediateCA.pem;
	ssl_certificate_key  /etc/nginx/ssl/TestIntermediateCA.key;
	# 引用域名证书
	ssl_certificate      /etc/nginx/ssl/_.example.com.pem;
	ssl_certificate_key  /etc/nginx/ssl/_.example.com.key;
	# 自动跳转到HTTPS
	if ($server_port = 880) {
	    rewrite ^(.*)$ https://$host$1 permanent;
	}

        location / {
            proxy_pass http://backend;
             proxy_set_header HOST $host;
             proxy_connect_timeout 60;
             proxy_send_timeout 60;
             proxy_read_timeout 60;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

}
